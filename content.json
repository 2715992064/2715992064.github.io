{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"ZZULIOJ 1000 从今天开始入坑C语言","date":"2021-09-26T14:24:55.221Z","updated":"2021-09-26T14:24:55.348Z","comments":true,"path":"2021/09/26/ZZULIOJ 1000 从今天开始入坑C语言/","link":"","permalink":"http://example.com/2021/09/26/ZZULIOJ%201000%20%E4%BB%8E%E4%BB%8A%E5%A4%A9%E5%BC%80%E5%A7%8B%E5%85%A5%E5%9D%91C%E8%AF%AD%E8%A8%80/","excerpt":"","text":"ZZULIOJ 1000:从今天开始入坑C语言代码123456#include&lt;stdio.h&gt;//引入头文件int main()//定义主函数为int类型&#123; printf(&quot;从今天开始入坑C语言\\n&quot;);//输出指定内容，\\n为换行符号 return 0;//函数返回值&#125; 这是一个C语言的标准格式，将会伴随我们走过整个C语言学习过程。 (1)int main(void)与int main()不同，但在多数代码中无区别。其不同之处是int main()可在引用时传入参数，int main(void)不可以。两者都需要返回值。 (2)void main()虽然也有相同的效果，但 void main()不需要返回值，且在某些编译器中代码会报错，因此并不推荐这种写法。","categories":[],"tags":[]},{"title":"","slug":"ZZULIOJ 1009 求平均分","date":"2021-09-26T13:56:52.466Z","updated":"2021-09-26T13:56:52.603Z","comments":true,"path":"2021/09/26/ZZULIOJ 1009 求平均分/","link":"","permalink":"http://example.com/2021/09/26/ZZULIOJ%201009%20%E6%B1%82%E5%B9%B3%E5%9D%87%E5%88%86/","excerpt":"","text":"ZZULIOJ 1009: 求平均分代码示例112345678910111213#include&lt;stdio.h&gt; int main()&#123;int ch, ma ,en; scanf(&quot;%d%d%d&quot;, &amp;ch, &amp;ma, &amp;en);//输入三个学科的成绩 double average = (ch + ma + en) / 3.0;//求平均 printf(&quot;%.2f\\n&quot;, average);return 0;&#125; 212345678910111213#include&lt;stdio.h&gt; int main()&#123;int ch, ma ,en; scanf(&quot;%d%d%d&quot;, &amp;ch, &amp;ma, &amp;en);//输入三个学科的成绩 double average = (ch + ma + en) / 3;//求平均 printf(&quot;%.2f\\n&quot;, average);return 0;&#125; 易错点 以上两串代码有何区别？你会发现，在求平均过程中，分母分别为3.0和3。 3=3.0，我们可能会觉得两个式子是没有区别的，但在编译器里进行计算后，我们发现两代码计算出的值并不相同，这是为什么呢？ 因为本题的原因，我们求平均值的三个数据（成绩）都为整数型，而分母（学科数目）也为整数型，以此计算，就算我们算出的数是一个小数，也是会先表示成整数类型，再在求平均过程中升级为浮点类型。 以程序2为例，假如求平均赋值过程中右侧的结果为84.3333….，因为分子分母均为整数类型，结果会变为整数类型84，在赋值给左侧average转化为双精度浮点型，最后输出为84.00，与原结果并不相等。 因此在程序1中，我们将分母变为3.0，相当于默认=右侧数据为浮点数，因此小数点后的数据得以保留，与原结果相等。 当然，令数据转为浮点型的方式不只有一种，在式子前或后*1.0也可以，如果我们给出的数据（例如本题中的成绩）已经是浮点数了，那么就不用再转换了。","categories":[],"tags":[]}],"categories":[],"tags":[]}